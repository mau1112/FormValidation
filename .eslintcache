[{"C:\\Users\\mau_2\\Documents\\JS\\React\\01-starting-project-forms\\src\\index.js":"1","C:\\Users\\mau_2\\Documents\\JS\\React\\01-starting-project-forms\\src\\App.js":"2","C:\\Users\\mau_2\\Documents\\JS\\React\\01-starting-project-forms\\src\\components\\SimpleInput.js":"3","C:\\Users\\mau_2\\Documents\\JS\\React\\01-starting-project-forms\\src\\components\\BasicForm.js":"4"},{"size":142,"mtime":1616595887000,"results":"5","hashOfConfig":"6"},{"size":215,"mtime":1626899543453,"results":"7","hashOfConfig":"6"},{"size":2530,"mtime":1626898033718,"results":"8","hashOfConfig":"6"},{"size":3601,"mtime":1626899593112,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1bxmlvi",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"C:\\Users\\mau_2\\Documents\\JS\\React\\01-starting-project-forms\\src\\index.js",[],["21","22"],"C:\\Users\\mau_2\\Documents\\JS\\React\\01-starting-project-forms\\src\\App.js",["23"],"\nimport BasicForm from './components/BasicForm';\nimport SimpleInput from './components/SimpleInput';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <BasicForm />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\mau_2\\Documents\\JS\\React\\01-starting-project-forms\\src\\components\\SimpleInput.js",[],"C:\\Users\\mau_2\\Documents\\JS\\React\\01-starting-project-forms\\src\\components\\BasicForm.js",["24"],"import { useState, useEffect } from \"react\";\n\nconst BasicForm = (props) => {\n  const [firstNameInput, setFirstNameInput] = useState(\"\");\n  const [lastNameInput, setLastNameInput] = useState(\"\");\n  const [emailInput, setEmailInput] = useState(\"\");\n  const [hasFirstNameInputBeenFocused, setHasFirstNameInputBeenFocused] =\n    useState(false);\n  const [hasLastNameInputBeenFocused, setHasLastNameInputBeenFocused] =\n    useState(false);\n  const [hasEmailInputBeenFocused, setHasEmailInputBeenFocused] =\n    useState(false);\n  const isFirstNameValid = firstNameInput.trim() !== \"\";\n  const isLastNameValid = lastNameInput.trim() !== \"\";\n  const isEmailValid =\n    emailInput.includes(\"@\") && emailInput.trim().length >= 3;\n  let isFormValid = false;\n  if(isFirstNameValid && isLastNameValid && isEmailValid){\n    isFormValid = true\n  }\n \n  const isFirstNameInputNotValid =\n    !isFirstNameValid && hasFirstNameInputBeenFocused;\n  const isLastNameInputNotValid = !isLastNameValid && hasLastNameInputBeenFocused;\n  const isEmailInputNotValid = !isEmailValid && hasEmailInputBeenFocused;\n\n  const firstNameHandler = (e) => {\n    setFirstNameInput(e.target.value);\n  };\n  const lastNameHandler = (e) => {\n    setLastNameInput(e.target.value);\n  };\n  const emailHandler = (e) => {\n    setEmailInput(e.target.value);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (!isFormValid) {\n      setHasEmailInputBeenFocused(true);\n      setHasFirstNameInputBeenFocused(true);\n      setHasLastNameInputBeenFocused(true);\n      return;\n    }\n    console.log(\"hola\");\n    setFirstNameInput(\"\");\n    setLastNameInput(\"\");\n    setEmailInput(\"\");\n    setHasEmailInputBeenFocused(false);\n    setHasFirstNameInputBeenFocused(false);\n    setHasLastNameInputBeenFocused(false);\n  };\n  const firstNameBlur = (e) => {\n    setHasFirstNameInputBeenFocused(true);\n  };\n  const lastNameBlur = (e) => {\n    setHasLastNameInputBeenFocused(true);\n  };\n  const emailBlur = (e) => {\n    setHasEmailInputBeenFocused(true);\n  };\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"control-group\">\n        <div\n          className={\n            !isFirstNameInputNotValid\n              ? \"form-control\"\n              : \"form-control invalid\"\n          }\n        >\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={firstNameHandler}\n            value={firstNameInput}\n            onBlur={firstNameBlur}\n          />\n        </div>\n        <div\n          className={\n            !isLastNameInputNotValid\n              ? \"form-control\"\n              : \"form-control invalid\"\n          }\n        >\n          <label htmlFor=\"name2\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name2\"\n            onChange={lastNameHandler}\n            value={lastNameInput}\n            onBlur={lastNameBlur}\n          />\n        </div>\n      </div>\n      <div\n        className={\n          !isEmailInputNotValid\n            ? \"form-control\"\n            : \"form-control invalid\"\n        }\n      >\n        <label htmlFor=\"email\">E-Mail Address</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          onChange={emailHandler}\n          value={emailInput}\n          onBlur={emailBlur}\n        />\n      </div>\n      {isFirstNameInputNotValid || isLastNameInputNotValid || isEmailInputNotValid ? (\n        <p>Form is invalid</p>\n      ) : null}\n      <div className=\"form-actions\">\n        <button disabled={!isFormValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":3,"column":8,"nodeType":"31","messageId":"32","endLine":3,"endColumn":19},{"ruleId":"29","severity":1,"message":"33","line":1,"column":20,"nodeType":"31","messageId":"32","endLine":1,"endColumn":29},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"no-unused-vars","'SimpleInput' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]